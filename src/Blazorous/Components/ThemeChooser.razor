@using Blazorous
@inject IThemes ThemesProvider

<select class="@Class" value="@_selected" onchange="@OnChange">
    @if (ShowPrompt)
    {
        <option>Select a theme</option>
    }
    @foreach (var theme in ThemesProvider.Themes.Values)
    {
        <option value="@theme.Name">@theme.Name</option>
    }
</select>

@functions {
    private string _selected;

    [Parameter] private Action<ITheme> SelectedThemeChanged { get; set; }
    [Parameter] private string Class { get; set; }
    [Parameter] private bool ShowPrompt { get; set; } = true;

    protected override void OnInit()
    {
        if (ThemesProvider.Current != null)
        {
            _selected = ThemesProvider.Current.Name;
        }
        else
        {
            if (ShowPrompt)
            {
                _selected = "Select a theme";
            }
            else
            {
                SelectedChanged(ThemesProvider.Themes.First().Key);
            }
        }
    }

    void OnChange(UIChangeEventArgs e)
    {
        SelectedChanged(e.Value.ToString());
    }

    void SelectedChanged(string newSelected)
    {
        _selected = newSelected;
        if (_selected != "Select a theme")
        {
            ThemesProvider.Current = ThemesProvider.Themes[_selected];
        }
        else
        {
            ThemesProvider.Current = null;
        }
        SelectedThemeChanged?.Invoke(ThemesProvider.Current);
    }
}