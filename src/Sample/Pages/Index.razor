@page "/"
@inject ICssCreator CssCreator

<Dynamic TagName="div" css="@center">
    <h1>Blazorous</h1>
    <h2>Maintainable CSS with Blazor</h2>
    <Dynamic TagName="a" css="@link" primary="true" href="https://github.com/chanan/Blazorous">Github</Dynamic>
    <Dynamic TagName="a" css="@link" href="gettingstarted">Getting Started</Dynamic>
</Dynamic>

<pre style="background:rgba(238,238,238,0.92);color:#000">
<span style="color:#03c">&lt;<span style="font-weight:700">Dynamic</span> <span style="color:#36c;font-style:italic">TagName</span>=<span style="color:#093">"div"</span> <span style="color:#36c;font-style:italic">css</span>=<span style="color:#093">"@@center"</span>></span>
<span style="color:#03c">&lt;<span style="font-weight:700">h1</span>></span>Blazorous<span style="color:#03c">&lt;/<span style="font-weight:700">h1</span>></span>
<span style="color:#03c">&lt;<span style="font-weight:700">h2</span>></span>Maintainable CSS with Blazor<span style="color:#03c">&lt;/<span style="font-weight:700">h2</span>></span>
<span style="color:#03c">&lt;<span style="font-weight:700">Dynamic</span> <span style="color:#36c;font-style:italic">TagName</span>=<span style="color:#093">"a"</span> <span style="color:#36c;font-style:italic">css</span>=<span style="color:#093">"@@link"</span> <span style="color:#36c;font-style:italic">primary</span>=<span style="color:#093">"true"</span> <span style="color:#36c;font-style:italic">href</span>=<span style="color:#093">"https://github.com/chanan/Blazorous"</span>></span>Github<span style="color:#03c">&lt;/<span style="font-weight:700">Dynamic</span>></span>
<span style="color:#03c">&lt;<span style="font-weight:700">Dynamic</span> <span style="color:#36c;font-style:italic">TagName</span>=<span style="color:#093">"a"</span> <span style="color:#36c;font-style:italic">css</span>=<span style="color:#093">"@@link"</span> <span style="color:#36c;font-style:italic">href</span>=<span style="color:#093">"/glamorexamples"</span>></span>Glamor Examples<span style="color:#03c">&lt;/<span style="font-weight:700">Dynamic</span>></span>
<span style="color:#03c">&lt;/<span style="font-weight:700">Dynamic</span>></span>

@@functions {
    //Styles can defined as strings:
    string center = @@<span style="color:#093">"{
        "</span><span style="color:#093">"text-align"</span><span style="color:#093">": "</span><span style="color:#093">"center"</span><span style="color:#093">",
        "</span><span style="color:#093">"margin-bottom"</span><span style="color:#093">": "</span><span style="color:#093">"30px"</span><span style="color:#093">"
    }"</span>;
    //Or in C#. When using C# you can make your styles dynamic!
    ICss link = Css.CreateNew().AddRule(<span style="color:#093">"border"</span>, <span style="color:#093">"1px solid #F67982"</span>)
        .AddRules(<span style="color:#093">"width"</span>, <span style="color:#093">"11em"</span>, <span style="color:#093">"padding"</span>, <span style="color:#093">"0.7em 0"</span>, <span style="color:#093">"text-decoration"</span>, <span style="color:#093">"none"</span>, <span style="color:#093">"border-radius"</span>, 4, <span style="color:#093">"display"</span>, <span style="color:#093">"inline-block"</span>, <span style="color:#093">"margin"</span>, <span style="color:#093">".5em 1em"</span>, <span style="color:#093">"transition"</span>, <span style="color:#093">"all .3s"</span>)
        .AddDynamicRule((css, attributes) =>
        {
            var isPrimary = attributes.GetBooleanAttribute(<span style="color:#093">"primary"</span>);
            css.AddRule(<span style="color:#093">"background-color"</span>, isPrimary ? <span style="color:#093">"#CC3A4B"</span> : <span style="color:#093">"rgba(255, 255, 255, 0.5)"</span>);
            css.AddRule(<span style="color:#093">"color"</span>, isPrimary ? <span style="color:#093">"#fff"</span> : <span style="color:#093">"#DA233C"</span>);
        })
        .AddSelector(":hover", css =>
        {
            css.AddDynamicRule((innerCss, attributes) =>
            {
                var isPrimary = attributes.GetBooleanAttribute(<span style="color:#093">"primary"</span>);
                innerCss.AddRule(<span style="color:#093">"background-color"</span>, isPrimary ? <span style="color:#093">"rgba(255, 255, 255, 0.5)"</span> : <span style="color:#093">"#CC3A4B"</span>);
                innerCss.AddRule(<span style="color:#093">"color"</span>, isPrimary ? <span style="color:#093">"#DA233C"</span> : <span style="color:#093">"#fff"</span>);
            });
        });
}
</pre>

<div class="text-center">
    <a href="https://www.nuget.org/packages/Blazorous/"><img src="https://img.shields.io/nuget/vpre/Blazorous.svg" /></a>
    <a href="https://github.com/chanan/Blazorous"><img src="https://img.shields.io/github/stars/chanan/Blazorous.svg?style=social&label=Stars" /></a>
</div>

@functions {
    //Styles can defined as strings:
    string center = @"{
        ""text-align"": ""center"",
        ""margin-bottom"": ""30px""
    }";
    
    ICss link;

    protected override void OnInit()
    {
        //Or in C#. When using C# you can make your styles dynamic!
        link = CssCreator.CreateNew().AddRule("border", "1px solid #F67982")
            .AddRules("width", "11em", "padding", "0.7em 0", "text-decoration", "none", "border-radius", 4, "display", "inline-block", "margin", ".5em 1em", "transition", "all .3s")
            .AddDynamicRule((css, attributes) =>
            {
                var isPrimary = attributes.GetBooleanAttribute("primary");
                css.AddRule("background-color", isPrimary ? "#CC3A4B" : "rgba(255, 255, 255, 0.5)");
                css.AddRule("color", isPrimary ? "#fff" : "#DA233C");
            })
            .AddSelector(":hover", css =>
            {
                css.AddDynamicRule((innerCss, attributes) =>
                {
                    var isPrimary = attributes.GetBooleanAttribute("primary");
                    innerCss.AddRule("background-color", isPrimary ? "rgba(255, 255, 255, 0.5)" : "#CC3A4B");
                    innerCss.AddRule("color", isPrimary ? "#DA233C" : "#fff");
                });
            });
    }
}
